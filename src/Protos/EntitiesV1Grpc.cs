// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/entities_v1.proto
// </auto-generated>
// Original file comments:
// Copyright 2015 gRPC authors.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// !!!Important note!!!
//    When regenerating the files in the "protos" folder using "npm run protogen", 
//    you will need to manually change the following lines in entities_v1_pb.js 
//    for PagingParams to work correctly:
// 
//        proto.entities_v1.PagingParams.prototype.getSkip = function() {
//          return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0)); // Change this default value of 0 to null
//        };
// 
//        proto.entities_v1.PagingParams.prototype.getTake = function() {
//          return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0)); // Change this default value of 0 to null
//        };
// 
//        proto.entities_v1.PagingParams.toObject = function(includeInstance, msg) {
//          var f, obj = {
//            skip: jspb.Message.getFieldWithDefault(msg, 1, 0), // Change this default value of 0 to null
//            take: jspb.Message.getFieldWithDefault(msg, 2, 0), // Change this default value of 0 to null
//            total: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
//        };
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace PipTemplatesServiceData.EntitiesV1 {
  /// <summary>
  /// The Entities service definition.
  /// </summary>
  public static partial class Entities
  {
    static readonly string __ServiceName = "entities_v1.Entities";

    static readonly grpc::Marshaller<global::PipTemplatesServiceData.EntitiesV1.EntitiesPageRequest> __Marshaller_entities_v1_EntitiesPageRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PipTemplatesServiceData.EntitiesV1.EntitiesPageRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PipTemplatesServiceData.EntitiesV1.EntitiesPageReply> __Marshaller_entities_v1_EntitiesPageReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PipTemplatesServiceData.EntitiesV1.EntitiesPageReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PipTemplatesServiceData.EntitiesV1.EntityIdRequest> __Marshaller_entities_v1_EntityIdRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PipTemplatesServiceData.EntitiesV1.EntityIdRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PipTemplatesServiceData.EntitiesV1.EntityReply> __Marshaller_entities_v1_EntityReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PipTemplatesServiceData.EntitiesV1.EntityReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PipTemplatesServiceData.EntitiesV1.EntityNameRequest> __Marshaller_entities_v1_EntityNameRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PipTemplatesServiceData.EntitiesV1.EntityNameRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PipTemplatesServiceData.EntitiesV1.EntityRequest> __Marshaller_entities_v1_EntityRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PipTemplatesServiceData.EntitiesV1.EntityRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::PipTemplatesServiceData.EntitiesV1.EntitiesPageRequest, global::PipTemplatesServiceData.EntitiesV1.EntitiesPageReply> __Method_get_entities = new grpc::Method<global::PipTemplatesServiceData.EntitiesV1.EntitiesPageRequest, global::PipTemplatesServiceData.EntitiesV1.EntitiesPageReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "get_entities",
        __Marshaller_entities_v1_EntitiesPageRequest,
        __Marshaller_entities_v1_EntitiesPageReply);

    static readonly grpc::Method<global::PipTemplatesServiceData.EntitiesV1.EntityIdRequest, global::PipTemplatesServiceData.EntitiesV1.EntityReply> __Method_get_entity_by_id = new grpc::Method<global::PipTemplatesServiceData.EntitiesV1.EntityIdRequest, global::PipTemplatesServiceData.EntitiesV1.EntityReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "get_entity_by_id",
        __Marshaller_entities_v1_EntityIdRequest,
        __Marshaller_entities_v1_EntityReply);

    static readonly grpc::Method<global::PipTemplatesServiceData.EntitiesV1.EntityNameRequest, global::PipTemplatesServiceData.EntitiesV1.EntityReply> __Method_get_entity_by_name = new grpc::Method<global::PipTemplatesServiceData.EntitiesV1.EntityNameRequest, global::PipTemplatesServiceData.EntitiesV1.EntityReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "get_entity_by_name",
        __Marshaller_entities_v1_EntityNameRequest,
        __Marshaller_entities_v1_EntityReply);

    static readonly grpc::Method<global::PipTemplatesServiceData.EntitiesV1.EntityRequest, global::PipTemplatesServiceData.EntitiesV1.EntityReply> __Method_create_entity = new grpc::Method<global::PipTemplatesServiceData.EntitiesV1.EntityRequest, global::PipTemplatesServiceData.EntitiesV1.EntityReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "create_entity",
        __Marshaller_entities_v1_EntityRequest,
        __Marshaller_entities_v1_EntityReply);

    static readonly grpc::Method<global::PipTemplatesServiceData.EntitiesV1.EntityRequest, global::PipTemplatesServiceData.EntitiesV1.EntityReply> __Method_update_entity = new grpc::Method<global::PipTemplatesServiceData.EntitiesV1.EntityRequest, global::PipTemplatesServiceData.EntitiesV1.EntityReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "update_entity",
        __Marshaller_entities_v1_EntityRequest,
        __Marshaller_entities_v1_EntityReply);

    static readonly grpc::Method<global::PipTemplatesServiceData.EntitiesV1.EntityIdRequest, global::PipTemplatesServiceData.EntitiesV1.EntityReply> __Method_delete_entity_by_id = new grpc::Method<global::PipTemplatesServiceData.EntitiesV1.EntityIdRequest, global::PipTemplatesServiceData.EntitiesV1.EntityReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "delete_entity_by_id",
        __Marshaller_entities_v1_EntityIdRequest,
        __Marshaller_entities_v1_EntityReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::PipTemplatesServiceData.EntitiesV1.EntitiesV1Reflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Entities</summary>
    [grpc::BindServiceMethod(typeof(Entities), "BindService")]
    public abstract partial class EntitiesBase
    {
      public virtual global::System.Threading.Tasks.Task<global::PipTemplatesServiceData.EntitiesV1.EntitiesPageReply> get_entities(global::PipTemplatesServiceData.EntitiesV1.EntitiesPageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::PipTemplatesServiceData.EntitiesV1.EntityReply> get_entity_by_id(global::PipTemplatesServiceData.EntitiesV1.EntityIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::PipTemplatesServiceData.EntitiesV1.EntityReply> get_entity_by_name(global::PipTemplatesServiceData.EntitiesV1.EntityNameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::PipTemplatesServiceData.EntitiesV1.EntityReply> create_entity(global::PipTemplatesServiceData.EntitiesV1.EntityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::PipTemplatesServiceData.EntitiesV1.EntityReply> update_entity(global::PipTemplatesServiceData.EntitiesV1.EntityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::PipTemplatesServiceData.EntitiesV1.EntityReply> delete_entity_by_id(global::PipTemplatesServiceData.EntitiesV1.EntityIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Entities</summary>
    public partial class EntitiesClient : grpc::ClientBase<EntitiesClient>
    {
      /// <summary>Creates a new client for Entities</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public EntitiesClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Entities that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public EntitiesClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected EntitiesClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected EntitiesClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::PipTemplatesServiceData.EntitiesV1.EntitiesPageReply get_entities(global::PipTemplatesServiceData.EntitiesV1.EntitiesPageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return get_entities(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PipTemplatesServiceData.EntitiesV1.EntitiesPageReply get_entities(global::PipTemplatesServiceData.EntitiesV1.EntitiesPageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_get_entities, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PipTemplatesServiceData.EntitiesV1.EntitiesPageReply> get_entitiesAsync(global::PipTemplatesServiceData.EntitiesV1.EntitiesPageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return get_entitiesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PipTemplatesServiceData.EntitiesV1.EntitiesPageReply> get_entitiesAsync(global::PipTemplatesServiceData.EntitiesV1.EntitiesPageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_get_entities, null, options, request);
      }
      public virtual global::PipTemplatesServiceData.EntitiesV1.EntityReply get_entity_by_id(global::PipTemplatesServiceData.EntitiesV1.EntityIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return get_entity_by_id(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PipTemplatesServiceData.EntitiesV1.EntityReply get_entity_by_id(global::PipTemplatesServiceData.EntitiesV1.EntityIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_get_entity_by_id, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PipTemplatesServiceData.EntitiesV1.EntityReply> get_entity_by_idAsync(global::PipTemplatesServiceData.EntitiesV1.EntityIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return get_entity_by_idAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PipTemplatesServiceData.EntitiesV1.EntityReply> get_entity_by_idAsync(global::PipTemplatesServiceData.EntitiesV1.EntityIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_get_entity_by_id, null, options, request);
      }
      public virtual global::PipTemplatesServiceData.EntitiesV1.EntityReply get_entity_by_name(global::PipTemplatesServiceData.EntitiesV1.EntityNameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return get_entity_by_name(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PipTemplatesServiceData.EntitiesV1.EntityReply get_entity_by_name(global::PipTemplatesServiceData.EntitiesV1.EntityNameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_get_entity_by_name, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PipTemplatesServiceData.EntitiesV1.EntityReply> get_entity_by_nameAsync(global::PipTemplatesServiceData.EntitiesV1.EntityNameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return get_entity_by_nameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PipTemplatesServiceData.EntitiesV1.EntityReply> get_entity_by_nameAsync(global::PipTemplatesServiceData.EntitiesV1.EntityNameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_get_entity_by_name, null, options, request);
      }
      public virtual global::PipTemplatesServiceData.EntitiesV1.EntityReply create_entity(global::PipTemplatesServiceData.EntitiesV1.EntityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return create_entity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PipTemplatesServiceData.EntitiesV1.EntityReply create_entity(global::PipTemplatesServiceData.EntitiesV1.EntityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_create_entity, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PipTemplatesServiceData.EntitiesV1.EntityReply> create_entityAsync(global::PipTemplatesServiceData.EntitiesV1.EntityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return create_entityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PipTemplatesServiceData.EntitiesV1.EntityReply> create_entityAsync(global::PipTemplatesServiceData.EntitiesV1.EntityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_create_entity, null, options, request);
      }
      public virtual global::PipTemplatesServiceData.EntitiesV1.EntityReply update_entity(global::PipTemplatesServiceData.EntitiesV1.EntityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return update_entity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PipTemplatesServiceData.EntitiesV1.EntityReply update_entity(global::PipTemplatesServiceData.EntitiesV1.EntityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_update_entity, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PipTemplatesServiceData.EntitiesV1.EntityReply> update_entityAsync(global::PipTemplatesServiceData.EntitiesV1.EntityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return update_entityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PipTemplatesServiceData.EntitiesV1.EntityReply> update_entityAsync(global::PipTemplatesServiceData.EntitiesV1.EntityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_update_entity, null, options, request);
      }
      public virtual global::PipTemplatesServiceData.EntitiesV1.EntityReply delete_entity_by_id(global::PipTemplatesServiceData.EntitiesV1.EntityIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return delete_entity_by_id(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PipTemplatesServiceData.EntitiesV1.EntityReply delete_entity_by_id(global::PipTemplatesServiceData.EntitiesV1.EntityIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_delete_entity_by_id, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PipTemplatesServiceData.EntitiesV1.EntityReply> delete_entity_by_idAsync(global::PipTemplatesServiceData.EntitiesV1.EntityIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return delete_entity_by_idAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PipTemplatesServiceData.EntitiesV1.EntityReply> delete_entity_by_idAsync(global::PipTemplatesServiceData.EntitiesV1.EntityIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_delete_entity_by_id, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override EntitiesClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EntitiesClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(EntitiesBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_get_entities, serviceImpl.get_entities)
          .AddMethod(__Method_get_entity_by_id, serviceImpl.get_entity_by_id)
          .AddMethod(__Method_get_entity_by_name, serviceImpl.get_entity_by_name)
          .AddMethod(__Method_create_entity, serviceImpl.create_entity)
          .AddMethod(__Method_update_entity, serviceImpl.update_entity)
          .AddMethod(__Method_delete_entity_by_id, serviceImpl.delete_entity_by_id).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, EntitiesBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_get_entities, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PipTemplatesServiceData.EntitiesV1.EntitiesPageRequest, global::PipTemplatesServiceData.EntitiesV1.EntitiesPageReply>(serviceImpl.get_entities));
      serviceBinder.AddMethod(__Method_get_entity_by_id, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PipTemplatesServiceData.EntitiesV1.EntityIdRequest, global::PipTemplatesServiceData.EntitiesV1.EntityReply>(serviceImpl.get_entity_by_id));
      serviceBinder.AddMethod(__Method_get_entity_by_name, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PipTemplatesServiceData.EntitiesV1.EntityNameRequest, global::PipTemplatesServiceData.EntitiesV1.EntityReply>(serviceImpl.get_entity_by_name));
      serviceBinder.AddMethod(__Method_create_entity, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PipTemplatesServiceData.EntitiesV1.EntityRequest, global::PipTemplatesServiceData.EntitiesV1.EntityReply>(serviceImpl.create_entity));
      serviceBinder.AddMethod(__Method_update_entity, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PipTemplatesServiceData.EntitiesV1.EntityRequest, global::PipTemplatesServiceData.EntitiesV1.EntityReply>(serviceImpl.update_entity));
      serviceBinder.AddMethod(__Method_delete_entity_by_id, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PipTemplatesServiceData.EntitiesV1.EntityIdRequest, global::PipTemplatesServiceData.EntitiesV1.EntityReply>(serviceImpl.delete_entity_by_id));
    }

  }
}
#endregion
